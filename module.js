const readline=require("readline"),fs=require("fs");exports.loadnum=function(t,e){let r=fs.readFileSync(t,"utf-8").slice().split("\n")[e-1];if(r.startsWith("b:")){const t=r.substr(2);if(0==t)return!1;if(1==t)return!0;throw new Error("The value you entered is invalid. Usage: b:<1 | 0>")}if(1==isNaN(r))throw new Error("Any input other than numbers is invalid.");return r},exports.loadstr=function(t,e){return fs.readFileSync(t,"utf-8").slice().split("\n")[e-1]},exports.edit=function(t,e,r){const n=fs.createReadStream(t,{start:0,autoClose:!1});let i=fs.readFileSync(t,"utf-8").slice().split("\n")[e];fs.writeFileSync("dt.eldat","");const s=fs.createWriteStream("dt.eldat"),a=readline.createInterface({input:n,output:s});let l=0;a.on("line",t=>{l<i.length?(l==e-1?s.write(r+"\n"):s.write(t+"\n"),l++):l==i.length&&(l==e-1?s.write(r):s.write(t))}),a.on("close",()=>{fs.readFile("dt.eldat","utf-8",(e,r)=>{if(e)throw e;fs.copyFileSync("./dt.eldat",t),fs.unlink("./dt.eldat",t=>{if(t)throw t})})})},exports.math=function(t,e,r){let n=fs.readFileSync(t,"utf-8").slice().split("\n")[e];const i=fs.createReadStream(t),s=(fs.writeFileSync("dtm.eldat",""),fs.createWriteStream("dtm.eldat")),a=readline.createInterface({input:i,output:s});let l=0;a.on("line",t=>{if(l<n.length)if(l==e-1){if(r.startsWith("+")){const e=parseInt(t)+parseInt(r.replace("+",""));if(s.write(e+"\n"),isNaN(t))throw new Error("Any input other than numbers is invalid.");l++}else if(r.startsWith("-")){const e=parseInt(t)-parseInt(r.replace("-",""));if(s.write(e+"\n"),isNaN(t))throw new Error("Any input other than numbers is invalid.");l++}else if(r.startsWith("/")){const e=parseInt(t)/parseInt(r.replace("/",""));if(s.write(e+"\n"),isNaN(t))throw new Error("Any input other than numbers is invalid.");l++}else if(r.startsWith("*")){const e=parseInt(t)*parseInt(r.replace("*",""));if(s.write(e+"\n"),isNaN(t))throw new Error("Any input other than numbers is invalid.");l++}}else s.write(t+"\n"),l++;else if(l==n.length)if(l==e-1){if(r.startsWith("+")){const e=parseInt(t)+parseInt(r.replace("+",""));if(s.write(e),isNaN(t))throw new Error("Any input other than numbers is invalid.");l++}else if(r.startsWith("-")){const e=parseInt(t)-parseInt(r.replace("-",""));if(s.write(e),isNaN(t))throw new Error("Any input other than numbers is invalid.");l++}else if(r.startsWith("/")){const e=parseInt(t)/parseInt(r.replace("/",""));if(s.write(e),isNaN(t))throw new Error("Any input other than numbers is invalid.");l++}else if(r.startsWith("*")){const e=parseInt(t)*parseInt(r.replace("*",""));if(s.write(e),isNaN(t))throw new Error("Any input other than numbers is invalid.");l++}}else s.write(t),l++}),a.on("close",()=>{fs.readFile("dtm.eldat","utf-8",(e,r)=>{if(e)throw e;fs.copyFileSync("./dtm.eldat",t),fs.unlink("./dtm.eldat",t=>{if(t)throw t})})})},exports.linecount=function(t){return fs.readFileSync(t,"utf-8").slice().split("\n").length};
